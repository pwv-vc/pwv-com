---
export interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
  filter?: string;
}

const { currentPage, totalPages, baseUrl, filter } = Astro.props;

// Generate page numbers to show
const getPageNumbers = () => {
  const pages: (number | string)[] = [];
  const maxVisiblePages = 5;

  if (totalPages <= maxVisiblePages) {
    // Show all pages if total is small
    for (let i = 1; i <= totalPages; i++) {
      pages.push(i);
    }
  } else {
    // Show first page
    pages.push(1);

    if (currentPage > 3) {
      pages.push('...');
    }

    // Show pages around current page
    const start = Math.max(2, currentPage - 1);
    const end = Math.min(totalPages - 1, currentPage + 1);

    for (let i = start; i <= end; i++) {
      pages.push(i);
    }

    if (currentPage < totalPages - 2) {
      pages.push('...');
    }

    // Show last page
    if (totalPages > 1) {
      pages.push(totalPages);
    }
  }

  return pages;
};

const pageNumbers = getPageNumbers();

const buildUrl = (page: number) => {
  const url = new URL(baseUrl, Astro.site);
  url.searchParams.set('page', page.toString());
  if (filter && filter !== 'all') {
    url.searchParams.set('filter', filter);
  }
  return url.toString();
};
---

{totalPages > 1 && (
  <nav class="flex justify-center items-center space-x-2 mt-8" aria-label="Pagination">
    <!-- Previous button -->
    {currentPage > 1 ? (
      <a
        href={buildUrl(currentPage - 1)}
        class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 hover:text-gray-700 transition-colors"
        aria-label="Previous page"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
      </a>
    ) : (
      <span class="px-3 py-2 text-sm font-medium text-gray-300 bg-gray-100 border border-gray-200 rounded-md cursor-not-allowed">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
      </span>
    )}

    <!-- Page numbers -->
    {pageNumbers.map((page) => {
      if (page === '...') {
        return (
          <span class="px-3 py-2 text-sm font-medium text-gray-500">...</span>
        );
      }

      const pageNum = page as number;
      const isCurrentPage = pageNum === currentPage;

      return (
        <a
          href={buildUrl(pageNum)}
          class={`px-3 py-2 text-sm font-medium rounded-md transition-colors ${
            isCurrentPage
              ? 'text-white bg-[var(--pwv-blue)] border border-[var(--pwv-blue)]'
              : 'text-gray-700 bg-white border border-gray-300 hover:bg-gray-50 hover:text-gray-900'
          }`}
          aria-label={`Page ${pageNum}`}
          aria-current={isCurrentPage ? 'page' : undefined}
        >
          {pageNum}
        </a>
      );
    })}

    <!-- Next button -->
    {currentPage < totalPages ? (
      <a
        href={buildUrl(currentPage + 1)}
        class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 hover:text-gray-700 transition-colors"
        aria-label="Next page"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </a>
    ) : (
      <span class="px-3 py-2 text-sm font-medium text-gray-300 bg-gray-100 border border-gray-200 rounded-md cursor-not-allowed">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </span>
    )}
  </nav>
)}

<!-- Page info -->
<div class="text-center mt-4 text-sm text-gray-600">
  Page {currentPage} of {totalPages}
</div>
