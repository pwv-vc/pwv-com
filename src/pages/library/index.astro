---
import Layout from '../../layouts/Layout.astro';
import Heading1 from '../../components/Heading1.astro';

import {
  getPaginatedLibraryPosts,
  getExternalLibraryPosts,
  getNonExternalLibraryPosts,
} from '../../lib/library';
import PostsGrid from '../../components/PostsGrid.astro';
import LibraryToggle from '../../components/LibraryToggle.astro';
import FeaturedPosts from '../../components/FeaturedPosts.astro';
import Pagination from '../../components/Pagination.astro';

// Get filter and page from URL params
const filter = Astro.url.searchParams.get('filter') ?? 'all';
const page = parseInt(Astro.url.searchParams.get('page') ?? '1');

const activeFilter: 'all' | 'community' | 'pwv' = ['community', 'pwv'].includes(
  filter
)
  ? (filter as 'community' | 'pwv')
  : 'all';

// Get paginated posts
const pageSize = 12;
const { posts, pagination } = await getPaginatedLibraryPosts(
  page,
  pageSize,
  activeFilter
);

// Get counts for the toggle (we still need these for the toggle component)
const externalPosts = await getExternalLibraryPosts();
const nonExternalPosts = await getNonExternalLibraryPosts();
const title = 'Insights and thoughts from PWV';
const description =
  'Perspectives and announcements from PWV, our founders and community.';
---

<Layout title={title} description={description}>
  <section class="mx-auto px-4 sm:px-6 lg:px-8">
    <Heading1>Insights and thoughts</Heading1>
    <p class="mb-8 text-lg">
      Perspectives and announcements from PWV, our founders and community.
    </p>

    <LibraryToggle
      externalCount={externalPosts.length}
      nonExternalCount={nonExternalPosts.length}
      activeFilter={activeFilter}
    />

    {activeFilter === 'all' && <FeaturedPosts />}

    <PostsGrid posts={posts} size="large" />

    <Pagination
      currentPage={pagination.currentPage}
      totalPages={pagination.totalPages}
      baseUrl="/library"
      filter={activeFilter}
    />

    <div class="mt-8 text-center">
      <a
        href="/"
        class="bg-pwv-green text-pwv-light-green inline-flex items-center gap-2 rounded-lg px-5 py-2 text-sm"
      >
        <svg
          class="h-4 w-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M15 19l-7-7 7-7"></path>
        </svg>

        Home
      </a>
    </div>
  </section>
</Layout>
