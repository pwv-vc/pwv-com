---
import { type CollectionEntry } from 'astro:content';
import { render } from 'astro:content';
import SmartImage from '../../components/SmartImage.astro';
import Layout from '../../layouts/Layout.astro';
import PlaceholderImage from '../../components/PlaceholderImage.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import PostNavigation from '../../components/PostNavigation.astro';
import { getAllLibraryPosts, getReadingTime, getPostNavigation } from '../../lib/library';

// if Netlify output is server, then *must* be true
// export const prerender = true;

export async function getStaticPaths() {
  const posts = await getAllLibraryPosts();
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<'library'>;

const post = Astro.props;
const { Content } = await render(post);
const { nextPost, previousPost } = await getPostNavigation(post.id);

// Generate meta data from post
const title = post.data.title;
const description = post.data.description;
const image = post.data.heroImage ? post.data.heroImage.src : '/og-image.png';
const keywords = post.data.tags.join(', ');
---
<Layout title={title} description={description} image={image} keywords={keywords}>
  <div class="prose prose-lg max-w-screen-xl mx-auto">
    <div class="w-full md:w-full lg:w-2/3 mx-auto">
      {post.data.heroImage ? (
        <SmartImage
          src={post.data.heroImage}
          alt={post.data.title}
          size="full"
          rounded={true}
          shadow={true}
          class="mb-8"
          loading="eager"
        />
      ) : (
        <PlaceholderImage
          alt={`Hero image for ${post.data.title}`}
          class="w-full h-64 rounded-lg mb-8"
        />
      )}
    </div>
    <h2 class="my-2">{title}</h2>
    <h3 class="my-2">
      {post.data.description}
    </h3>
    <h4>{post.data.author}</h4>
    <div class="flex justify-between items-center">
      <div class="flex flex-wrap gap-2">
        {
          post.data.tags.map((tag) => (
              <span class="text-sm text-gray-500 font-mono p-2 border border-gray-200 rounded-lg">{tag}</span>
          ))
        }
      </div>
      <p class="text-sm whitespace-nowrap ml-auto">
        üóìÔ∏è <FormattedDate date={post.data.pubDate} />
      </p>
    </div>
    <hr />
    <Content />

    <!-- Post Navigation -->
    <PostNavigation
      currentPost={post}
      nextPost={nextPost}
      previousPost={previousPost}
    />
  </div>
</Layout>
